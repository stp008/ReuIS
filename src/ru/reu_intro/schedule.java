package ru.reu_intro;

import java.util.ArrayList;
import java.util.Arrays;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class schedule extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private HorizontalSplitPanel horizontalSplitPanel_1;
	@AutoGenerated
	private Table table_1;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private ComboBox comboBox_3;
	@AutoGenerated
	private Label label_7;
	@AutoGenerated
	private ComboBox comboBox_2;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private ComboBox comboBox_1;
	@AutoGenerated
	private Label label_2;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public schedule() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalSplitPanel_1
		horizontalSplitPanel_1 = buildHorizontalSplitPanel_1();
		mainLayout
				.addComponent(horizontalSplitPanel_1, "top:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalSplitPanel buildHorizontalSplitPanel_1() {
		// common part: create layout
		horizontalSplitPanel_1 = new HorizontalSplitPanel();
		horizontalSplitPanel_1.setImmediate(false);
		horizontalSplitPanel_1.setWidth("100.0%");
		horizontalSplitPanel_1.setHeight("100.0%");
		horizontalSplitPanel_1.setMargin(false);
		
		// panel_1
		panel_1 = buildPanel_1();
		horizontalSplitPanel_1.addComponent(panel_1);
		
		// table_1
		table_1 = new Table();
		table_1.setImmediate(false);
		table_1.setWidth("100.0%");
		table_1.setHeight("100.0%");
		horizontalSplitPanel_1.addComponent(table_1);
		tableData.initProperties(table_1, new String[]{"Предмет", "Время начала", "Время конца", "Аудитория"});
		table_1.addItem(new String[]{"Понедельник","","",""}, null);
		tableData.fillTable(table_1, new String[][]{{"Экономика фирмы","8:30","10:00","314 4k"},{"Логистика", "10:10", "11:50", "452"}, {"Английский язык","11:50","13:20","652"}}, 10);
		table_1.addItem(new String[]{"Вторник","","",""}, null);
		tableData.fillTable(table_1, new String[][]{{"Экономика фирмы","8:30","10:00","314 4k"},{"Логистика", "10:10", "11:50", "452"}, {"Английский язык","11:50","13:20","652"}}, 10);
		table_1.addItem(new String[]{"Среда","","",""}, null);
		tableData.fillTable(table_1, new String[][]{{"Экономика фирмы","8:30","10:00","314 4k"},{"Логистика", "10:10", "11:50", "452"}, {"Английский язык","11:50","13:20","652"}}, 10);
		
		return horizontalSplitPanel_1;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);
		
		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_2.addComponent(gridLayout_1);
		verticalLayout_2.setExpandRatio(gridLayout_1, 1.0f);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setColumns(15);
		gridLayout_1.setRows(35);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Направление");
		gridLayout_1.addComponent(label_2, 4, 13);
		gridLayout_1.setComponentAlignment(label_2, new Alignment(6));
		
		// comboBox_1
		comboBox_1 = new ComboBox();
		comboBox_1.setImmediate(false);
		comboBox_1.setWidth("203px");
		comboBox_1.setHeight("-1px");
		comboboxData.fillCombobox(comboBox_1, new ArrayList<String>(Arrays.asList("Экономика","Прикладная математика и информатика","","Бизнес-информатика")));
		gridLayout_1.addComponent(comboBox_1, 5, 13);
		gridLayout_1.setComponentAlignment(comboBox_1, new Alignment(20));
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Курс");
		gridLayout_1.addComponent(label_3, 4, 14);
		gridLayout_1.setComponentAlignment(label_3, new Alignment(6));
		
		// comboBox_2
		comboBox_2 = new ComboBox();
		comboBox_2.setImmediate(false);
		comboBox_2.setWidth("203px");
		comboBox_2.setHeight("-1px");
		comboboxData.fillCombobox(comboBox_2, new ArrayList<String>(Arrays.asList("I курс","II курс","III курс", "IV курс", "V курс")));
		gridLayout_1.addComponent(comboBox_2, 5, 14);
		gridLayout_1.setComponentAlignment(comboBox_2, new Alignment(20));
		
		// label_7
		label_7 = new Label();
		label_7.setImmediate(false);
		label_7.setWidth("-1px");
		label_7.setHeight("-1px");
		label_7.setValue("Группа");
		gridLayout_1.addComponent(label_7, 4, 15);
		gridLayout_1.setComponentAlignment(label_7, new Alignment(6));
		
		// comboBox_3
		comboBox_3 = new ComboBox();
		comboBox_3.setImmediate(false);
		comboBox_3.setWidth("203px");
		comboBox_3.setHeight("-1px");
		comboboxData.fillCombobox(comboBox_3, new ArrayList<String>(Arrays.asList("411","412","413","414", "415", "416")));
		gridLayout_1.addComponent(comboBox_3, 5, 15);
		gridLayout_1.setComponentAlignment(comboBox_3, new Alignment(20));
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Скачать расписание (.doc)");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		gridLayout_1.addComponent(button_1, 5, 16);
		
		return gridLayout_1;
	}

}
